<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="527" started-at="2013-04-03T14:09:10Z" finished-at="2013-04-03T14:09:11Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="527" started-at="2013-04-03T14:09:10Z" finished-at="2013-04-03T14:09:11Z">
      <class name="by.hzv.s2.client.rest.S2RestClientTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="115" started-at="2013-04-03T18:09:10Z" finished-at="2013-04-03T18:09:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getContentStreamByPath()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="getContentStreamByPath" duration-ms="135" started-at="2013-04-03T18:09:10Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getContentStreamByPath -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="1" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getFid()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="getFid" duration-ms="48" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFid -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getPath()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="getPath" duration-ms="3" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPath -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="rpc(java.lang.String)[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="rpc" duration-ms="28" started-at="2013-04-03T18:09:11Z" data-provider="jsonResponseProvider" finished-at="2013-04-03T18:09:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ "firstName":"John" , "lastName":"Doe" }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rpc -->
        <test-method status="PASS" signature="rpc(java.lang.String)[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="rpc" duration-ms="2" started-at="2013-04-03T18:09:11Z" data-provider="jsonResponseProvider" finished-at="2013-04-03T18:09:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rpc -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="rpc(java.lang.String)[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="rpc" duration-ms="1" started-at="2013-04-03T18:09:11Z" data-provider="jsonResponseProvider" finished-at="2013-04-03T18:09:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rpc -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="shouldCreateFile()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldCreateFile" duration-ms="65" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCreateFile -->
        <test-method status="PASS" signature="shouldDeleteFileByFid()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldDeleteFileByFid" duration-ms="3" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDeleteFileByFid -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="shouldDeleteFileByPath()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldDeleteFileByPath" duration-ms="2" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDeleteFileByPath -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="1" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="shouldDeleteFolder()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldDeleteFolder" duration-ms="1" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDeleteFolder -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="1" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="shouldNormalizeBaseUrlOnInit()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldNormalizeBaseUrlOnInit" duration-ms="5" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldNormalizeBaseUrlOnInit -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="shouldReturnContentByFid()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldReturnContentByFid" duration-ms="2" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnContentByFid -->
        <test-method status="PASS" signature="shouldReturnFileInfoList()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="shouldReturnFileInfoList" duration-ms="87" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnFileInfoList -->
        <test-method status="PASS" signature="setup()[pri:0, instance:by.hzv.s2.client.rest.S2RestClientTest@5210563]" name="setup" is-config="true" duration-ms="0" started-at="2013-04-03T18:09:11Z" finished-at="2013-04-03T18:09:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- by.hzv.s2.client.rest.S2RestClientTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
