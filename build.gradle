import org.gradle.api.Project
import org.gradle.api.initialization.Settings

apply plugin: 'war'
apply plugin: 'project-report'
apply from: "${rootProject.projectDir}/libraries.gradle"

buildscript {			
    repositories {		
        maven { url 'http://repo.jfrog.org/artifactory/gradle' }       
    }
}

dependencies {
    subprojects.each { Project project -> runtime project }
}

allprojects {
	repositories {
        mavenCentral()
        maven { url "http://repo.springsource.org/libs-release" }
        flatDir name: 'localRepository', dirs: "${rootProject.rootDir}/lib"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply from: "${rootProject.projectDir}/tool/checkstyle/config/checkstyle.gradle"
	apply from: "${rootProject.projectDir}/tool/thucydides/config/thucydides.gradle"
    
	
    dependencies {
        groovy libraries.'groovy-all-indy'
        compile libraries.'insight-annotation'
        compile libraries.'slf4j-api'

        testCompile libraries.'fest-assert'
        testCompile libraries.'mockito-all'
        testCompile libraries.'mockito-groovy-support'
        testCompile libraries.'testng'
        groovy libraries.'thucydides-core'
        groovy libraries.'thucydides-jbehave'
		
		runtime 'cglib-nodep-2.2.3:cglib-nodep-2.2.3'

        runtime libraries.'logback'
	}
	
    /* invoke dynamic config */
    def enableIndy = System.properties.enableIndy?.toBoolean() ?: false
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    [compileGroovy.groovyOptions,compileTestGroovy.groovyOptions]*.with {
		fork = true
		optimizationOptions = [indy: enableIndy, 'int': true]
        encoding = 'UTF-8'
    }
	
	test {			
		testLogging.showStandardStreams = false			

		/* turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library */
		testReport = false
		useTestNG() {
			/* report generation delegated to TestNG library */
			useDefaultListeners = true
			
		}				
	}
		
    compileJava.dependsOn clean
    jar.dependsOn checkstyleReport		    
}

	