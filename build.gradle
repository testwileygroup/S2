import org.gradle.api.Project
import org.gradle.api.initialization.Settings

buildscript {
    repositories {
        maven { url 'http://repo.jfrog.org/artifactory/gradle' }
    }
}

configurations {
    all*.exclude module: "groovy-all"
    all*.exclude module: "insight-annotation"
    all*.exclude module: "spring-test"
}

def projectsToFilter = ['s2-bundles', 's2-adapters']

subprojects { prj ->
	if (!projectsToFilter.contains(prj.name)) { 
		apply plugin: 'idea'
		apply plugin: 'java'
		apply plugin: 'groovy'		
		apply plugin: 'project-report'
		apply from: "${rootProject.projectDir}/libraries.gradle"   
		apply from: "${rootProject.projectDir}/config/codenarc/codenarc.gradle"
		apply from: "${rootProject.projectDir}/config/checkstyle/checkstyle.gradle"
		apply from: "${rootProject.projectDir}/config/thucydides/thucydides.gradle"
		apply from: "${rootProject.projectDir}/config/jacoco/jacoco.gradle"

		repositories {
			mavenCentral()
			maven { url "http://repo.springsource.org/libs-release" }
			flatDir name: 'localRepository', dirs: "${rootProject.rootDir}/lib"
		}

		dependencies {
			if (!name.equals('s2-api')) {
				compile project(':s2-api')
			}

			compile libraries.'slf4j-api'
			compile libraries.'insight-annotation'
			compile libraries.'spring-context'
			compile libraries.'commons-lang3'
			compile libraries.'guava'
			compile libraries.'commons-io'
			compile libraries.'jackson'


			groovy libraries.'groovy-all-indy'
			testCompile libraries.'fest-assert'
			testCompile libraries.'mockito-all'
			testCompile libraries.'mockito-groovy-support'
			testCompile libraries.'testng'
			testCompile libraries.'thucydides-core'
			testCompile libraries.'thucydides-jbehave'

			runtime libraries.'logback'
		}

		/* invoke dynamic config */
		def enableIndy = System.properties.enableIndy?.toBoolean() ?: false
		sourceCompatibility = 1.7
		targetCompatibility = 1.7
		[compileGroovy.groovyOptions,compileTestGroovy.groovyOptions]*.with {
			fork = true
			optimizationOptions = [indy: enableIndy, 'int': true]
			encoding = 'UTF-8'
		}

		test {
			testLogging.showStandardStreams = false

			/* turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library */
			testReport = false
			useTestNG() {
				/* report generation delegated to TestNG library */
				useDefaultListeners = true

			}
		}

		compileJava.dependsOn clean
		jar.dependsOn checkstyleReport
	}
}